services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: nine-kickoff-db
    environment:
      POSTGRES_USER: nineuser
      POSTGRES_PASSWORD: ninepass
      POSTGRES_DB: postgres  # Default database
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nineuser -d kickoff_challenge"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nine-network

  # Redis for real-time features and caching
  redis:
    image: redis:7-alpine
    container_name: nine-kickoff-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nine-network

  # LiteLLM Proxy for AI Model Management
  litellm:
    image: ghcr.io/berriai/litellm:v1.71.1-stable
    container_name: nine-kickoff-litellm
    ports:
      - "4000:4000"  # LiteLLM proxy port
    environment:
      # API Keys (set these in your .env file)
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${CLAUDE_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      # LiteLLM Admin Settings
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY:-sk-1234567890abcdef}
      - LITELLM_SALT_KEY=my-super-secret-salt
      - DATABASE_URL=postgresql://nineuser:ninepass@postgres:5432/litellm
      - STORE_MODEL_IN_DB=True
    volumes:
      - ./litellm-config.yaml:/app/config.yaml:ro
    command: ["--config", "/app/config.yaml", "--detailed_debug"]
    networks:
      - nine-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:4000').read()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nuxt 3 Production Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nine-kickoff-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NITRO_HOST=0.0.0.0
      - NITRO_PORT=3000
      - DATABASE_URL=postgresql://nineuser:ninepass@postgres:5432/kickoff_challenge
      - REDIS_URL=redis://redis:6379
      - LITELLM_BASE_URL=http://litellm:4000
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      litellm:
        condition: service_healthy
    networks:
      - nine-network
    restart: unless-stopped

  # Adminer for database management (optional)
  adminer:
    image: adminer:4
    container_name: nine-kickoff-adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: nette
    depends_on:
      - postgres
    networks:
      - nine-network

volumes:
  postgres_data:
  redis_data:

networks:
  nine-network:
    driver: bridge
