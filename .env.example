# ==============================================
# NINE KICKOFF BUS CHALLENGE - DEVELOPMENT ENV
# ==============================================

# Application
NODE_ENV=development
NUXT_PUBLIC_SITE_URL=http://localhost:3000

# Database Configuration
# For Docker: postgresql://nineuser:ninepass@postgres:5432/kickoff_challenge
# For local: postgresql://nineuser:ninepass@localhost:5432/kickoff_challenge
DATABASE_URL=postgresql://nineuser:ninepass@localhost:5432/kickoff_challenge

# Redis Configuration
# For Docker: redis://redis:6379
# For local: redis://localhost:6379
REDIS_URL=redis://localhost:6379

# Authentication Configuration
AUTH_MODE=fake
AUTH_ORIGIN=http://localhost:3000/api/auth
AUTH_SECRET=generate-a-secure-secret-here-minimum-32-characters
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=generate-a-secure-secret-here-minimum-32-characters

# Google OAuth (Replace with your actual values)
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret

# AI Service API Keys (Replace with your actual keys)
OPENAI_API_KEY=your-openai-api-key
CLAUDE_API_KEY=your-anthropic-api-key
GEMINI_API_KEY=your-google-gemini-key

# LiteLLM Proxy Configuration
LITELLM_MASTER_KEY=sk-1234567890abcdef
LITELLM_UI_USERNAME=admin
LITELLM_UI_PASSWORD=admin123

# Development Settings
NUXT_DEVTOOLS=true
NUXT_DEBUG=true

# Logging
LOG_LEVEL=debug

# Security (Development only - change for production)
COOKIE_SECURE=false
SESSION_SECRET=dev-session-secret-change-in-production

# File Upload (if needed later)
MAX_FILE_SIZE=10mb
UPLOAD_DIR=./uploads

# Email (if needed later)
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USER=test
SMTP_PASS=test

# Rate Limiting (Development - more lenient)
RATE_LIMIT_MAX=1000
RATE_LIMIT_WINDOW=60000

# ==============================================
# DOCKER COMPOSE SPECIFIC
# ==============================================

# PostgreSQL Container
POSTGRES_USER=nineuser
POSTGRES_PASSWORD=ninepass
POSTGRES_DB=kickoff_challenge

# Redis Container
REDIS_PASSWORD=

# Session Configuration
NUXT_SESSION_PASSWORD=generate-a-secure-32-character-session-password

# ==============================================
# INSTRUCTIONS FOR SETUP
# ==============================================

# 1. Authentication Mode:
#    - AUTH_MODE=fake: Development mode with user dropdown selection
#    - AUTH_MODE=google: Production mode with Google OAuth
#    - Fake mode allows you to test as any user in the database

# 2. Google OAuth Setup (only needed when AUTH_MODE=google):
#    - Go to https://console.developers.google.com/
#    - Create a new project or select existing
#    - Enable Google+ API
#    - Create OAuth 2.0 credentials
#    - Add http://localhost:3000/api/auth/callback/google to authorized redirect URIs
#    - Replace GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET above

# 3. AI API Keys:
#    - OpenAI: https://platform.openai.com/api-keys
#    - Anthropic: https://console.anthropic.com/
#    - Google AI: https://makersuite.google.com/app/apikey
#    - Replace the API keys above

# 4. LiteLLM Proxy:
#    - LITELLM_MASTER_KEY: Admin access key for LiteLLM proxy
#    - LITELLM_UI_USERNAME/PASSWORD: Web UI credentials
#    - LiteLLM manages all AI providers through single interface
#    - Access LiteLLM UI at http://localhost:4000

# 5. Database/Redis Connection:
#    - For Docker development: Use hostnames (postgres:5432, redis:6379)
#    - For local development: Use localhost (localhost:5432, localhost:6379)
#    - Update DATABASE_URL and REDIS_URL accordingly

# 6. To start development:
#    - Docker: docker-compose -f docker-compose.dev.yml up -d
#    - Local: npm run dev
#    - Visit http://localhost:3000
#    - Database UI: http://localhost:8080 (adminer)
#    - LiteLLM UI: http://localhost:4000 (admin/admin123)